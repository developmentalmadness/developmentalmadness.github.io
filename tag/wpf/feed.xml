<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>developMENTALmadness: wpf</title>
  <subtitle>Posts tagged with wpf</subtitle>
  <id>http://www.developmentalmadness.com</id>
  <link href="http://www.developmentalmadness.com"/>
  <link href="http://www.developmentalmadness.com/tag/wpf/feed.xml" rel="self"/>
  <updated>2008-10-27T17:39:00+00:00</updated>
  <author>
    <name>Mark J. Miller</name>
  </author>
  <entry>
    <title>Wrestling with XML Namespaces and WPF</title>
    <link rel="alternate" href="http://www.developmentalmadness.com/2008/10/27/wrestling-with-xml-namespaces-and-wpf/"/>
    <id>http://www.developmentalmadness.com/2008/10/27/wrestling-with-xml-namespaces-and-wpf/</id>
    <published>2008-10-27T17:39:00+00:00</published>
    <updated>2016-11-26T15:23:19+00:00</updated>
    <author>
      <name>Mark J. Miller</name>
    </author>
    <summary type="html">I have been using XML for internal data formats for many years. Mostly for the purpose of transforming data using XSLT. So while I’ve been working with XML for a long time, I have never had the need to work with namespaces other than those that were standard</summary>
  </entry>
  <entry>
    <title>In Place List Editing With WPF</title>
    <link rel="alternate" href="http://www.developmentalmadness.com/2008/12/24/in-place-list-editing-with-wpf/"/>
    <id>http://www.developmentalmadness.com/2008/12/24/in-place-list-editing-with-wpf/</id>
    <published>2008-12-24T18:33:00+00:00</published>
    <updated>2016-11-26T15:23:19+00:00</updated>
    <author>
      <name>Mark J. Miller</name>
    </author>
    <summary type="html">I’ve been working in WPF for the last month and learning some pretty cool stuff. I really like it. But then I spend a couple days trying to something that would take me 2 minutes in an ASP.NET Web Form and I want to swallow a bullet. I know there is just</summary>
  </entry>
  <entry>
    <title>Prism for Silverlight 2: Taking ‘Hello World’ to a Whole New Level</title>
    <link rel="alternate" href="http://www.developmentalmadness.com/2009/06/08/prism_for_silverlight_2_taking_hello_world_to_a_whole_new_level/"/>
    <id>http://www.developmentalmadness.com/2009/06/08/prism_for_silverlight_2_taking_hello_world_to_a_whole_new_level/</id>
    <published>2009-06-08T18:09:00+00:00</published>
    <updated>2016-11-26T15:23:19+00:00</updated>
    <author>
      <name>Mark J. Miller</name>
    </author>
    <summary type="html">The World’s Most Over-engineered “Hello World” Demo

Download Source

I wanted to build a demo/guidance application for Silverlight


WCF
Design-time data binding
Independent, decoupled modules
Commanding support


I chose to use the (aka Prism 2) since</summary>
  </entry>
  <entry>
    <title>Silverlight/WPF: Customizing the DatePicker Control</title>
    <link rel="alternate" href="http://www.developmentalmadness.com/2009/08/27/silverlightwpf-customizing-the-datepicker-control/"/>
    <id>http://www.developmentalmadness.com/2009/08/27/silverlightwpf-customizing-the-datepicker-control/</id>
    <published>2009-08-27T18:34:00+00:00</published>
    <updated>2016-11-26T15:23:19+00:00</updated>
    <author>
      <name>Mark J. Miller</name>
    </author>
    <summary type="html">Source Code

I’m working on a Silverlight scheduling application and wanted to make the DatePicker control from the Silverlight Toolkit look like the program icon on my iPod Touch. The calendar looks icon like a day calendar and dynamically displays the</summary>
  </entry>
  <entry>
    <title>Xaml: Binding to the current DataContext</title>
    <link rel="alternate" href="http://www.developmentalmadness.com/2009/08/27/xaml-binding-to-the-current-datacontext/"/>
    <id>http://www.developmentalmadness.com/2009/08/27/xaml-binding-to-the-current-datacontext/</id>
    <published>2009-08-27T00:13:00+00:00</published>
    <updated>2016-11-26T15:23:19+00:00</updated>
    <author>
      <name>Mark J. Miller</name>
    </author>
    <summary type="html">Sometimes instead of binding to a property of the current DataContext you want to bind to the actual DataContext itself. For example, I am using DelegateCommand from Composite Application Library and needed to bind a command to perform an action on the</summary>
  </entry>
</feed>
